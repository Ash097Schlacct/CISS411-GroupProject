@*
Course #: CISS 411
Course Name: Software Architecture with ASP.NET with MVC
Group 3: Ashley Steward, Linda Daniel, Allan Lopesandovall, Brenden Hoffman, 
Jason Farr, Jerome Whitaker, Jason Farr and Justin Kim.
Date Completed: 10-2-2025
Story Assignee: Ashley Steward 
Story: User Story 2
*@

@model IEnumerable<CISS411_GroupProject.Models.Order>
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "All Orders";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>All Orders</h2>
        @if (User.IsInRole("Customer"))
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Create New Order
            </a>
        }
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

    @if (User.IsInRole("Customer") && Model.Any(o => o.Status == "Ready"))
    {
        <div class="alert alert-info">
            One or more of your orders are ready for pickup!
        </div>
    }


    <div class="card mb-3">
        <div class="card-body">
            <form method="get" asp-action="List" class="row g-3 align-items-center">
                <div class="col-auto">
                    <label for="status" class="col-form-label">Filter by Status:</label>
                </div>
                <div class="col-auto">
                    <select name="status" id="status" class="form-control" onchange="this.form.submit()">
                        <option value="">-- All Orders --</option>
                        <option value="Pending">Pending</option>
                        <option value="Awaiting Customer Approval">Awaiting Customer Approval</option>
                        <option value="In Process">In Process</option>
                        <option value="Ready">Ready</option>
                        <option value="Picked Up">Picked Up</option>
                    </select>
                </div>
                <div class="col-auto">
                    <a asp-action="List" class="btn btn-secondary">Clear Filter</a>
                </div>
            </form>
        </div>
    </div>

    @if (Model.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Order ID</th>
                        <th>Customer</th>
                        <th>Occasion</th>
                        <th>Delivery Date</th>
                        <th>Budget</th>
                        <th>Status</th>
                        <th>Actions</th>
                        @if (User.IsInRole("Employee") || User.IsInRole("Admin"))
                        {
                            <th style="width: 240px;">Update Status</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr>
                            <td>
                                <a asp-action="Details" asp-route-id="@order.OrderID" class="text-decoration-none">
                                    #@order.OrderID
                                </a>
                            </td>
                            <td>
                                @(order.Customer != null
                                                        ? $"{order.Customer.FirstName} {order.Customer.LastName}"
                                                        : "—")
                                                          </td>
                                                          <td>@order.Occasion</td>
                                                          <td>@order.DeliveryDate.ToShortDateString()</td>
                                                          <td>@(order.Budget.HasValue ? $"${order.Budget.Value:F2}" : "—")</td>
                                                          <td>
                                                              <span class="badge
                                            @(order.Status == "Pending" ? "bg-warning text-dark"
                                                                              : order.Status == "Awaiting Customer Approval" ? "bg-info"
                                                                              : order.Status == "In Process" ? "bg-primary"
                                                                              : order.Status == "Ready" ? "bg-success"
                                                                              : "bg-secondary")">
                            @order.Status
                        </span>

                        @if (order.Status == "Awaiting Customer Approval" && order.Designs != null && order.Designs.Any())
                                {
                                    <br />
                                    <small class="text-muted">
                                        <i class="bi bi-images"></i> @order.Designs.Count design(s)
                                    </small>
                                }
                                @if (order.Designs != null && order.Designs.Any(d => d.IsApproved))
                                {
                                    <br />
                                    <small class="text-success">
                                        <i class="bi bi-check-circle-fill"></i> Approved
                                    </small>
                                }
                            </td>
                            <td>
                                <div class="btn-group btn-group-sm" role="group">
                                    <a asp-action="Details" asp-route-id="@order.OrderID"
                                       class="btn btn-outline-primary" title="View Details">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    <a asp-controller="Designs" asp-action="ViewForOrder" asp-route-id="@order.OrderID"
                                       class="btn btn-outline-info" title="View/Manage Designs">
                                        <i class="bi bi-palette"></i>
                                    </a>
                                    @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
                                    {
                                        var hasFeedback = order.Feedbacks?.Any(f => !string.IsNullOrEmpty(f.FeedbackText)) == true;
                                        if (hasFeedback)
                                        {
                                            <a asp-action="Feedback" asp-route-id="@order.OrderID"
                                               class="btn btn-outline-success" title="View Feedback">
                                                <i class="bi bi-chat-left-text"></i>
                                            </a>
                                        }
                                    }
                                    @if (User.IsInRole("Customer") && order.Status == "Picked Up")
                                    {
                                        var hasFeedback = order.Feedbacks?.Any(f => !string.IsNullOrEmpty(f.FeedbackText)) == true;

                                        if (hasFeedback)
                                        {
                                            <span class="btn btn-outline-success disabled" style="cursor: default;">
                                                <i class="bi bi-check-circle"></i> Feedback Received
                                            </span>
                                        }
                                        else
                                        {
                                            <a asp-controller="Feedback" asp-action="Create" asp-route-orderId="@order.OrderID"
                                               class="btn btn-outline-primary">
                                                Leave Feedback
                                            </a>
                                        }
                                    }
                                    @if ((User.IsInRole("Employee") || User.IsInRole("Admin")) && order.Status == "Pending")
                                    {
                                        <a asp-controller="Designs" asp-action="Upload" asp-route-id="@order.OrderID"
                                           class="btn btn-outline-success" title="Upload Design">
                                            <i class="bi bi-upload"></i>
                                        </a>
                                    }
                                </div>
                            </td>
                            @if (User.IsInRole("Employee") || User.IsInRole("Admin"))
                            {
                                <td>
                                    <form asp-action="UpdateStatus" method="post" class="d-flex gap-1">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@order.OrderID" />

                                        @{
                                            var statusOptions = new List<SelectListItem>
                                                        {
                                                        new("Pending", "Pending", order.Status == "Pending"),
                                                        new("Awaiting Customer Approval", "Awaiting Customer Approval", order.Status == "Awaiting Customer Approval"),
                                                        new("In Process", "In Process", order.Status == "In Process"),
                                                        new("Ready", "Ready", order.Status == "Ready"),
                                                        new("Picked Up", "Picked Up", order.Status == "Picked Up")
                                                        };
                                        }

                                        @Html.DropDownList(
                                        "status",
                                                        statusOptions,
                                                        new { @class = "form-select form-select-sm" }
                                                        )

                            <button type="submit" class="btn btn-sm btn-success" title="Update Status">
                                <i class="bi bi-check"></i>
                            </button>
                        </form>
                    </td>
                                        }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle"></i> No orders found.
            @if (User.IsInRole("Customer"))
            {
                <text> Click "Create New Order" to place your first order.</text>
            }
        </div>
    }
</div>